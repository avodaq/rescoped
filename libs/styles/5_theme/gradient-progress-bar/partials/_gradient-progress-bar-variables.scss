@use '@angular/material' as mat;
@use 'sass:map';

// The color palette
$red: map.get(mat.$red-palette, 500); // #f44336
$orange: map.get(mat.$orange-palette, 500); // #ff9800
$yellow: map.get(mat.$amber-palette, 500); // #ffc107
$green: map.get(mat.$green-palette, 500); // #4caf50
$cyan: map.get(mat.$cyan-palette, 500); // #00bcd4
$lightblue: map.get(mat.$light-blue-palette, 500); // #03a9f4
$blue: map.get(mat.$blue-palette, 500); // #2196f3
$purple: map.get(mat.$deep-purple-palette, 500); // #9c27b0
$pink: map.get(mat.$pink-palette, 500); // #e91e63

// Subjective lightness, minimum 15 = very dark --- max 50 = very light
$red-lightness: 40;
$orange-lightness: 35;
$yellow-lightness: 30;
$green-lightness: 36;
$cyan-lightness: 37;
$lightblue-lightness: 38;
$blue-lightness: 39;
$purple-lightness: 39;
$pink-lightness: 40;

// Variables to keep the maps below tight and clean
$re: $red;
$or: $orange;
$ye: $yellow;
$gr: $green;
$cy: $cyan;
$lb: $lightblue;
$bl: $blue;
$pu: $purple;
$pi: $pink;

//
// Predefined gradients with compensation for stronger colors in the middle
//

$red-gradients: (
  red-orange: linear-gradient(90deg, $re, saturate(mix($re, $or, 17%), 45), $or),
  red-yellow: linear-gradient(90deg, $re, saturate(mix($re, $ye, 35%), 50), $ye),
  red-green: linear-gradient(90deg, $re, saturate(mix($re, $gr, 55%), 50), $gr),
  red-cyan: linear-gradient(90deg, $re, saturate(mix($re, $cy, 60%), 50), $cy),
  red-lightblue: linear-gradient(90deg, $re, saturate(mix($re, $lb, 60%), 45), $lb),
  red-blue: linear-gradient(90deg, $re, saturate(mix($re, $bl, 60%), 40), $bl),
  red-purple: linear-gradient(90deg, $re, saturate(mix($re, $pu, 45%), 40), $pu),
  red-pink: linear-gradient(90deg, $re, saturate(mix($re, $pi, 50%), 50), $pi),
  orange-red: linear-gradient(270deg, $re, saturate(mix($re, $or, 17%), 45), $or),
  yellow-red: linear-gradient(270deg, $re, saturate(mix($re, $ye, 35%), 50), $ye),
  green-red: linear-gradient(270deg, $re, saturate(mix($re, $gr, 55%), 50), $gr),
  cyan-red: linear-gradient(270deg, $re, saturate(mix($re, $cy, 60%), 50), $cy),
  lightblue-red: linear-gradient(270deg, $re, saturate(mix($re, $lb, 60%), 45), $lb),
  blue-red: linear-gradient(270deg, $re, saturate(mix($re, $bl, 60%), 40), $bl),
  purple-red: linear-gradient(270deg, $re, saturate(mix($re, $pu, 45%), 40), $pu),
  pink-red: linear-gradient(270deg, $re, saturate(mix($re, $pi, 50%), 50), $pi),
);

$orange-gradients: (
  orange-yellow: linear-gradient(90deg, $or, saturate(mix($or, $ye, 55%), 50), $ye),
  orange-green: linear-gradient(90deg, $or, saturate(mix($or, $gr, 60%), 50), $gr),
  orange-cyan: linear-gradient(90deg, $or, saturate(mix($or, $cy, 60%), 50), $cy),
  orange-lightblue: linear-gradient(90deg, $or, saturate(mix($or, $lb, 60%), 45), $lb),
  orange-blue: linear-gradient(90deg, $or, saturate(mix($or, $bl, 63%), 40), $bl),
  orange-purple: linear-gradient(90deg, $or, saturate(mix($or, $pu, 75%), 40), $pu),
  orange-pink: linear-gradient(90deg, $or, saturate(mix($or, $pi, 70%), 50), $pi),
  yellow-orange: linear-gradient(270deg, $or, saturate(mix($or, $ye, 55%), 50), $ye),
  green-orange: linear-gradient(270deg, $or, saturate(mix($or, $gr, 60%), 50), $gr),
  cyan-orange: linear-gradient(270deg, $or, saturate(mix($or, $cy, 60%), 50), $cy),
  lightblue-orange: linear-gradient(270deg, $or, saturate(mix($or, $lb, 60%), 45), $lb),
  blue-orange: linear-gradient(270deg, $or, saturate(mix($or, $bl, 63%), 40), $bl),
  purple-orange: linear-gradient(270deg, $or, saturate(mix($or, $pu, 75%), 40), $pu),
  pink-orange: linear-gradient(270deg, $or, saturate(mix($or, $pi, 70%), 50), $pi),
);

$yellow-gradients: (
  yellow-green: linear-gradient(90deg, $ye, saturate(mix($ye, $gr, 55%), 50), $gr),
  yellow-cyan: linear-gradient(90deg, $ye, saturate(mix($ye, $cy, 53%), 50), $cy),
  yellow-lightblue: linear-gradient(90deg, $ye, saturate(mix($ye, $lb, 55%), 45), $lb),
  yellow-blue: linear-gradient(90deg, $ye, saturate(mix($ye, $bl, 60%), 40), $bl),
  yellow-purple: linear-gradient(90deg, $ye, saturate(mix($ye, $pu, 60%), 40), $pu),
  yellow-pink: linear-gradient(90deg, $ye, saturate(mix($ye, $pi, 60%), 50), $pi),
  green-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $gr, 55%), 50), $gr),
  cyan-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $cy, 53%), 50), $cy),
  lightblue-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $lb, 55%), 45), $lb),
  blue-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $bl, 60%), 40), $bl),
  purple-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $pu, 60%), 40), $pu),
  pink-yellow: linear-gradient(270deg, $ye, saturate(mix($ye, $pi, 60%), 50), $pi),
);

$green-gradients: (
  green-cyan: linear-gradient(90deg, $gr, saturate(mix($gr, $cy, 40%), 50), $cy),
  green-lightblue: linear-gradient(90deg, $gr, saturate(mix($gr, $lb, 50%), 45), $lb),
  green-blue: linear-gradient(90deg, $gr, saturate(mix($gr, $bl, 50%), 40), $bl),
  green-purple: linear-gradient(90deg, $gr, saturate(mix($gr, $pu, 55%), 40), $pu),
  green-pink: linear-gradient(90deg, $gr, saturate(mix($gr, $pi, 55%), 50), $pi),
  cyan-green: linear-gradient(270deg, $gr, saturate(mix($gr, $cy, 40%), 50), $cy),
  lightblue-green: linear-gradient(270deg, $gr, saturate(mix($gr, $lb, 50%), 45), $lb),
  blue-green: linear-gradient(270deg, $gr, saturate(mix($gr, $bl, 50%), 40), $bl),
  purple-green: linear-gradient(270deg, $gr, saturate(mix($gr, $pu, 55%), 40), $pu),
  pink-green: linear-gradient(270deg, $gr, saturate(mix($gr, $pi, 55%), 50), $pi),
);

$cyan-gradients: (
  cyan-lightblue: linear-gradient(90deg, $cy, saturate(mix($cy, $lb, 45%), 45), $lb),
  cyan-blue: linear-gradient(90deg, $cy, saturate(mix($cy, $bl, 50%), 40), $bl),
  cyan-purple: linear-gradient(90deg, $cy, saturate(mix($cy, $pu, 50%), 20), $pu),
  cyan-pink: linear-gradient(90deg, $cy, saturate(mix($cy, $pi, 50%), 50), $pi),
  lightblue-cyan: linear-gradient(270deg, $cy, saturate(mix($cy, $lb, 45%), 45), $lb),
  blue-cyan: linear-gradient(270deg, $cy, saturate(mix($cy, $bl, 50%), 40), $bl),
  purple-cyan: linear-gradient(270deg, $cy, saturate(mix($cy, $pu, 50%), 20), $pu),
  pink-cyan: linear-gradient(270deg, $cy, saturate(mix($cy, $pi, 50%), 50), $pi),
);

$lightblue-gradients: (
  lightblue-blue: linear-gradient(90deg, $lb, saturate(mix($lb, $bl, 47%), 40), $bl),
  lightblue-purple: linear-gradient(90deg, $lb, saturate(mix($lb, $pu, 50%), 40), $pu),
  lightblue-pink: linear-gradient(90deg, $lb, saturate(mix($lb, $pi, 50%), 50), $pi),
  blue-lightblue: linear-gradient(270deg, $lb, saturate(mix($lb, $bl, 47%), 40), $bl),
  purple-lightblue: linear-gradient(270deg, $lb, saturate(mix($lb, $pu, 50%), 40), $pu),
  pink-lightblue: linear-gradient(270deg, $lb, saturate(mix($lb, $pi, 50%), 50), $pi),
);

$blue-gradients: (
  blue-purple: linear-gradient(90deg, $bl, saturate(mix($bl, $pu, 45%), 40), $pu),
  blue-pink: linear-gradient(90deg, $bl, saturate(mix($bl, $pi, 50%), 50), $pi),
  purple-blue: linear-gradient(270deg, $bl, saturate(mix($bl, $pu, 45%), 40), $pu),
  pink-blue: linear-gradient(270deg, $bl, saturate(mix($bl, $pi, 50%), 50), $pi),
);

$purple-gradients: (
  purple-pink: linear-gradient(90deg, $pu, saturate(mix($pu, $pi, 50%), 50), $pi),
  pink-purple: linear-gradient(270deg, $pu, saturate(mix($pu, $pi, 50%), 50), $pi),
);

@function map-collect($maps...) {
  $collection: ();

  @each $map in $maps {
    $collection: map-merge($collection, $map);
  }
  @return $collection;
}

$all-gradients: map-collect(
  $red-gradients,
  $orange-gradients,
  $yellow-gradients,
  $green-gradients,
  $cyan-gradients,
  $lightblue-gradients,
  $blue-gradients,
  $purple-gradients
);
